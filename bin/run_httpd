#!/bin/sh

if test -z $CBROOT
 then
  echo FATAL ERROR: \$CBROOT not set
  exit 
fi

if test ! -z $CBROOTLOCAL 
 then
   cd $CBROOTLOCAL
else
   cd $CBROOT
fi


LOG_PATH=`$CBROOT/bin/cbconfig log_path`
WORK_PATH=`$CBROOT/bin/cbconfig work_path`

if [ -z $LOG_PATH -o -z $WORK_PATH ]; then
  echo log_path and work_path configuration required 1>&2
  exit 2
fi


if test -e $CBROOTLOCAL/bin/httpd_setup -a -x $CBROOTLOCAL/bin/httpd_setup; then
   if ! $CBROOTLOCAL/bin/httpd_setup; then
      echo ERROR: httpd_setup failed; exit
   fi
fi

#if ! $CBROOT/bin/deploy/static_version_cache; then
#  echo ERROR: bin/deploy/static_version_cache failed; exit
#fi

# TODO: change this to check if the httpd is still running every second
mkdir -p $WORK_PATH/htdocs && mkdir -p $WORK_PATH/ctpl && mkdir -p $LOG_PATH && \
rm -fr $WORK_PATH/ctpl/* && \
$CBROOT/bin/make_configs && \
$CBROOT/apache/bin/apachectl configtest && \
$CBROOT/apache/bin/apachectl stop && RESTART=1

if [ $RESTART ]
then

  PIDFILE=${LOG_PATH}/httpd.pid

  if [ -f $PIDFILE ]; then

     PID=`cat ${PIDFILE}`

     # if it's just a stray pid file, just move on
     kill -0 $PID 2> /dev/null
     if [ $? -gt 0 ]; then
         echo Removing stray pid file
         rm $PIDFILE
     fi

     # give it a chance to stop, so we don't spam the console with "still running"
     sleep 0.8

     while test -f $PIDFILE
     do
       echo "Server still running, $PIDFILE exists"
       sleep 0.5
     done
  fi

  $CBROOT/apache/bin/apachectl start
fi

if test -e $CBROOTLOCAL/bin/httpd_cleanup -a -x $CBROOTLOCAL/bin/httpd_cleanup; then
   $CBROOTLOCAL/bin/httpd_cleanup || echo WARNING: httpd_cleanup failed
fi
